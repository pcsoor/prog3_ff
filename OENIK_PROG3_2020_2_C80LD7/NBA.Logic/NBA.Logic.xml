<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NBA.Logic</name>
    </assembly>
    <members>
        <member name="T:NBA.Logic.Average">
            <summary>
            This class necessary for calculating average values given by logic.
            </summary>
        </member>
        <member name="P:NBA.Logic.Average.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:NBA.Logic.Average.Avg">
            <summary>
            Gets or sets the average result.
            </summary>
        </member>
        <member name="M:NBA.Logic.Average.ToString">
            <inheritdoc/>
        </member>
        <member name="T:NBA.Logic.IPlayerLogic">
            <summary>
            Describes player specific methods.
            </summary>
        </member>
        <member name="M:NBA.Logic.IPlayerLogic.GetAllPlayers">
            <summary>
            Gives all of the players.
            </summary>
            <returns>list.</returns>
        </member>
        <member name="M:NBA.Logic.IPlayerLogic.AddNewPlayer(NBA.Data.Model.Player)">
            <summary>
            Inserts new player into database.
            </summary>
            <param name="player">player entity.</param>
        </member>
        <member name="M:NBA.Logic.IPlayerLogic.GetPlayerQtyByTeams">
            <summary>
            Returns how many player plays in each team.
            </summary>
            <returns>list.</returns>
        </member>
        <member name="M:NBA.Logic.IPlayerLogic.GetPlayerWithTheMostGamesPlayed">
            <summary>
            Return one player, who played the most game in the current series.
            </summary>
            <returns>player.</returns>
        </member>
        <member name="M:NBA.Logic.IPlayerLogic.DeletePlayer(System.Int32)">
            <summary>
            Delete player with the given id.
            </summary>
            <param name="id">player's id.</param>
        </member>
        <member name="T:NBA.Logic.ITeamLogic">
            <summary>
            Implements Team specific methods.
            </summary>
        </member>
        <member name="M:NBA.Logic.ITeamLogic.GetAllTeams">
            <summary>
            Returns list of teams.
            </summary>
            <returns>Collection.</returns>
        </member>
        <member name="T:NBA.Logic.PlayerLogic">
            <summary>
            Implements player specific methods.
            </summary>
        </member>
        <member name="M:NBA.Logic.PlayerLogic.#ctor(NBA.Repository.IPlayerRepository,NBA.Repository.IPlayerStatsRepository,NBA.Repository.ITeamsRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:NBA.Logic.PlayerLogic"/> class.
            </summary>
            <param name="playerRepo">player entity.</param>
            <param name="playerStatsRepo">team entity.</param>
            <param name="teamRepo">play statistics.</param>
        </member>
        <member name="M:NBA.Logic.PlayerLogic.GetAllPlayers">
            <inheritdoc/>
        </member>
        <member name="M:NBA.Logic.PlayerLogic.AddNewPlayer(NBA.Data.Model.Player)">
            <inheritdoc/>
        </member>
        <member name="M:NBA.Logic.PlayerLogic.GetOnePlayerByID(System.Int32)">
            <summary>
            Gives you one player.
            </summary>
            <param name="id">id of the player.</param>
            <returns>Player entity.</returns>
        </member>
        <member name="M:NBA.Logic.PlayerLogic.GetPlayerQtyByTeams">
            <summary>
            Return how many players are there in the team.
            </summary>
            <returns>string.</returns>
        </member>
        <member name="T:NBA.Logic.TeamLogic">
            <summary>
            This class implements team specific methods.
            </summary>
        </member>
        <member name="M:NBA.Logic.TeamLogic.#ctor(NBA.Repository.ITeamsRepository,NBA.Repository.ITeamsStatsRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:NBA.Logic.TeamLogic"/> class.
            </summary>
            <param name="teamRepo">This is teamrepository.</param>
            <param name="teamStatsRepo">this is team stat repository.</param>
        </member>
        <member name="M:NBA.Logic.TeamLogic.GetAllTeams">
            <inheritdoc/>
        </member>
        <member name="M:NBA.Logic.TeamLogic.GetOneTeam(System.Int32)">
            <summary>
            Returns one team.
            </summary>
            <param name="id">id of the team.</param>
            <returns>reeturn one team.</returns>
        </member>
        <member name="M:NBA.Logic.TeamLogic.GetAllTeamStat">
            <summary>
            Returns all of the team statistics.
            </summary>
            <returns>collection.</returns>
        </member>
    </members>
</doc>
